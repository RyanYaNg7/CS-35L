1. Get a copy of the Diffutils repository, in Git format, from the file ~eggert/src/gnu/diffutils on the SEASnet GNU/Linux servers, or from its main Savannah repository.

   git clone ~eggert/src/gnu/diffutils

2. Get a log of changes to Diffutils’ master branch using the “git log” command, and put it into the file git-log.txt.

   cd diffutils
   git log > ../git-lot.txt

3. Generate a list of tags used for Diffutils using the “git tag” command, and put it into the file git-tags.txt

   git tag > ../git-tags.txt

4. Find the commit entitled “maint: quote 'like this' or "like this", not `like this'”, and generate a patch for that commit, putting it into the file quote-patch.txt.

a. go into the file to find the commit
   emacs ../git-log.txt
   C-s: searcj for the key word "maint: quote ..."
b. generate a patch with the number of commit
   git format-patch -1 62ca21c8c1a5aa3488589dcb191a4ef04ae9ed4f --stdout > ../quote-patch.txt


5. Check out version 3.0 of Diffutils from your repository.
   
check out version v3.0 and make a new branch called my3.0
   git checkout -b 'my3.0' 'v3.0'


6. Use the patch command to apply quote-patch.txt to version 3.0. In some cases it will not be able to figure out what file to patch; skip past those by typing RETURN. Record any problems you had in applying the patch.

   patch -p1 < ../quote-patch.txt
can't find file to patch at input line 62
Perhaps you used the wrong -p or --strip option?
The text leading up to this was:
--------------------------
|From 62ca21c8c1a5aa3488589dcb191a4ef04ae9ed4f Mon Sep 17 00:00:00 2001
|From: Paul Eggert <eggert@cs.ucla.edu>
|Date: Wed, 25 Jan 2012 23:46:16 -0800
|Subject: [PATCH] maint: quote 'like this' or "like this", not `like this'
|
|This is in response to a recent change in the GNU coding standards,
|which now suggest quoting 'like this' or "like this", instead of
|`like this' or ``like this''.
|* HACKING, NEWS, README, README-hacking, TODO, doc/diagmeet.note:
|* doc/diffutils.texi, ms/config.bat, ms/config.site:
|* src/analyze.c, src/cmp.c, src/context.c, src/diff.c:
|* src/diff.h, src/diff3.c, src/dir.c, src/ifdef.c, src/io.c:
|* src/sdiff.c, src/side.c, src/system.h, src/util.c:
|* tests/help-version:
|Quote 'like this' or "like this" in commentary.
|* cfg.mk (old_NEWS_hash): Adjust to reflect new NEWS quoting.
|* man/help2man: Update to 1.40.4 version, with quoting fixed as above.
|* po/en.po: Remove translation involving `, as it's no longer needed.
|* src/cmp.c (try_help, specify_ignore_initial, usage, main):
|* src/diff.c (main, try_help, option_help_msgid, specify_value)
|(compare_files):
|* src/diff3.c (main, try_help, option_help_msgid, usage)
|(read_diff):
|* src/dir.c (compare_names):
|* src/sdiff.c (try_help, usage, check_child_status, main):
|* src/util.c (finish_output):
|* tests/help-version:
|Quote 'like this' in output.
|---
| HACKING            |  4 ++--
| NEWS               | 26 +++++++++++++-------------
| README             | 10 +++++-----
| README-hacking     |  2 +-
| TODO               |  2 +-
| cfg.mk             |  2 +-
| doc/diagmeet.note  |  2 +-
| doc/diffutils.texi |  2 +-
| man/help2man       | 33 +++++++++++++++++++--------------
| ms/config.bat      |  2 +-
| ms/config.site     |  2 +-
| po/en.po           | 14 +++-----------
| src/analyze.c      |  6 +++---
| src/cmp.c          | 20 ++++++++++----------
| src/context.c      | 10 +++++-----
| src/diff.c         | 40 ++++++++++++++++++++--------------------
| src/diff.h         |  8 ++++----
| src/diff3.c        | 26 +++++++++++++-------------
| src/dir.c          |  8 ++++----
| src/ifdef.c        |  2 +-
| src/io.c           |  4 ++--
| src/sdiff.c        | 22 +++++++++++-----------
| src/side.c         |  6 +++---
| src/system.h       |  6 +++---
| src/util.c         | 24 ++++++++++++------------
| tests/help-version | 12 ++++++------
| 26 files changed, 146 insertions(+), 149 deletions(-)
|
|diff --git a/HACKING b/HACKING
|index 3a99833..522e0b5 100644
|--- a/HACKING
|+++ b/HACKING
--------------------------
File to patch: RETURN
RETURN: No such file or directory
Skip this patch? [y] y
Skipping patch.
1 out of 1 hunk ignored
patching file NEWS
Hunk #1 succeeded at 30 (offset -28 lines).
Hunk #2 succeeded at 66 (offset -28 lines).
Hunk #3 succeeded at 106 (offset -28 lines).
Hunk #4 succeeded at 140 (offset -28 lines).
Hunk #5 succeeded at 184 (offset -28 lines).
Hunk #6 succeeded at 197 (offset -28 lines).
Hunk #7 succeeded at 209 (offset -28 lines).
Hunk #8 succeeded at 221 (offset -28 lines).
patching file README
Hunk #1 FAILED at 9.
Hunk #3 FAILED at 60.
2 out of 3 hunks FAILED -- saving rejects to file README.rej
patching file README-hacking
Hunk #1 FAILED at 19.
1 out of 1 hunk FAILED -- saving rejects to file README-hacking.rej
patching file TODO
patching file cfg.mk
Hunk #1 FAILED at 29.
1 out of 1 hunk FAILED -- saving rejects to file cfg.mk.rej
patching file doc/diagmeet.note
can't find file to patch at input line 249
Perhaps you used the wrong -p or --strip option?
The text leading up to this was:
--------------------------
|diff --git a/doc/diffutils.texi b/doc/diffutils.texi
|index 58b140c..00403df 100644
|--- a/doc/diffutils.texi
|+++ b/doc/diffutils.texi
--------------------------
File to patch: RETURN
RETURN: No such file or directory
Skip this patch? [y] y
Skipping patch.
1 out of 1 hunk ignored
can't find file to patch at input line 262
Perhaps you used the wrong -p or --strip option?
The text leading up to this was:
--------------------------
|diff --git a/man/help2man b/man/help2man
|index f9983f7..8bc961c 100755
|--- a/man/help2man
|+++ b/man/help2man
--------------------------
File to patch: RETURN
RETURN: No such file or directory
Skip this patch? [y] y
Skipping patch.
9 out of 9 hunks ignored
patching file ms/config.bat
patching file ms/config.site
Hunk #1 succeeded at 73 with fuzz 1.
patching file po/en.po
patching file src/analyze.c
patching file src/cmp.c
Hunk #1 succeeded at 36 with fuzz 1.
Hunk #4 succeeded at 185 (offset -6 lines).
Hunk #5 succeeded at 231 (offset -6 lines).
Hunk #6 succeeded at 257 (offset -6 lines).
Hunk #7 succeeded at 269 (offset -6 lines).
Hunk #8 succeeded at 364 (offset -6 lines).
Hunk #9 succeeded at 377 (offset -6 lines).
patching file src/context.c
Hunk #1 succeeded at 159 (offset 1 line).
Hunk #2 succeeded at 289 (offset 1 line).
Hunk #3 succeeded at 393 with fuzz 2 (offset 1 line).
Hunk #4 succeeded at 431 (offset 1 line).
Hunk #5 succeeded at 459 (offset 1 line).
patching file src/diff.c
Hunk #1 succeeded at 40 with fuzz 2 (offset -2 lines).
Hunk #2 succeeded at 57 (offset -2 lines).
Hunk #3 succeeded at 92 (offset -2 lines).
Hunk #4 succeeded at 330 (offset -10 lines).
Hunk #5 succeeded at 505 (offset -10 lines).
Hunk #6 succeeded at 534 (offset -10 lines).
Hunk #7 succeeded at 585 (offset -14 lines).
Hunk #8 succeeded at 744 (offset -14 lines).
Hunk #9 succeeded at 826 (offset -14 lines).
Hunk #10 FAILED at 876.
Hunk #11 FAILED at 906.
Hunk #12 FAILED at 942.
Hunk #13 succeeded at 960 with fuzz 2 (offset -29 lines).
Hunk #14 succeeded at 1159 with fuzz 2 (offset -32 lines).
3 out of 14 hunks FAILED -- saving rejects to file src/diff.c.rej
patching file src/diff.h
Hunk #2 succeeded at 126 with fuzz 2 (offset -13 lines).
Hunk #3 succeeded at 202 (offset -13 lines).
patching file src/diff3.c
Hunk #1 succeeded at 35 (offset 1 line).
Hunk #2 succeeded at 159 (offset 1 line).
Hunk #3 succeeded at 316 (offset 1 line).
Hunk #4 succeeded at 351 (offset 1 line).
Hunk #5 succeeded at 412 (offset 1 line).
Hunk #6 FAILED at 433.
Hunk #7 succeeded at 460 with fuzz 2 (offset -18 lines).
Hunk #8 succeeded at 1275 (offset -18 lines).
Hunk #9 succeeded at 1475 (offset -18 lines).
1 out of 9 hunks FAILED -- saving rejects to file src/diff3.c.rej
patching file src/dir.c
Hunk #1 succeeded at 84 (offset -1 lines).
Hunk #2 succeeded at 125 (offset -1 lines).
Hunk #3 succeeded at 154 (offset -1 lines).
Hunk #4 succeeded at 234 (offset -1 lines).
patching file src/ifdef.c
patching file src/io.c
patching file src/sdiff.c
Hunk #2 succeeded at 92 (offset 1 line).
Hunk #3 succeeded at 175 (offset 23 lines).
Hunk #4 succeeded at 230 (offset 17 lines).
Hunk #5 succeeded at 286 (offset 17 lines).
Hunk #6 succeeded at 572 (offset 13 lines).
Hunk #7 succeeded at 747 (offset 41 lines).
patching file src/side.c
patching file src/system.h
Hunk #2 succeeded at 105 (offset 6 lines).
patching file src/util.c
Hunk #4 succeeded at 190 with fuzz 2.
Hunk #8 succeeded at 650 (offset -27 lines).
patching file tests/help-version
Hunk #1 succeeded at 75 (offset 1 line).
Hunk #2 succeeded at 85 (offset 1 line).
Hunk #3 succeeded at 96 (offset 1 line).
Hunk #4 succeeded at 108 (offset 1 line).
Hunk #5 succeeded at 140 (offset 1 line).
Hunk #6 succeeded at 188 (offset 1 line).


7. Use the git status command to get an overview of what happened.

   git status
# On branch my3.0
# Changes not staged for commit:
#   (use "git add <file>..." to update what will be committed)
#   (use "git checkout -- <file>..." to discard changes in working directory)
#
#	modified:   NEWS
#	modified:   README
#	modified:   TODO
#	modified:   doc/diagmeet.note
#	modified:   ms/config.bat
#	modified:   ms/config.site
#	modified:   po/en.po
#	modified:   src/analyze.c
#	modified:   src/cmp.c
#	modified:   src/context.c
#	modified:   src/diff.c
#	modified:   src/diff.h
#	modified:   src/diff3.c
#	modified:   src/dir.c
#	modified:   src/ifdef.c
#	modified:   src/io.c
#	modified:   src/sdiff.c
#	modified:   src/side.c
#	modified:   src/system.h
#	modified:   src/util.c
#	modified:   tests/help-version
#
# Untracked files:
#   (use "git add <file>..." to include in what will be committed)
#
#	NEWS.orig
#	README-hacking.orig
#	README-hacking.rej
#	README.orig
#	README.rej
#	cfg.mk.orig
#	cfg.mk.rej
#	ms/config.site.orig
#	src/cmp.c.orig
#	src/context.c.orig
#	src/diff.c.orig
#	src/diff.c.rej
#	src/diff.h.orig
#	src/diff3.c.orig
#	src/diff3.c.rej
#	src/dir.c.orig
#	src/sdiff.c.orig
#	src/system.h.orig
#	src/util.c.orig
#	tests/help-version.orig
no changes added to commit (use "git add" and/or "git commit -a")


8. Learn how to use the Emacs functions vc-diff (C-x v =) and vc-revert (C-x v u). When you're in the *vc-diff* buffer generated by vc-diff, use describe-mode (C-h m) to find out the Emacs functions that you can use there, and in particular learn how to use the diff-apply-hunk (C-c C-a) and diff-goto-source (C-c C-c) functions.

9. Use Emacs to revert all the changes to files other than .c files, since you want only changes to .c files. Also, and don't forget this part, undo all the changes to .c files other than changes to character string constants, as the character-string changes are the only changes that you want; this may require editing some files by hand.

I used emacs to open NEWS, README, TODO, doc/diagmeet.note, ms/config.bat,
ms/config.site, po/en.po, src/diff.h, src/system.h, tests/help-version
I used vc-revert (C-x v u) to discard changes to those files.

For all the files that do have a .c extension we go through the diff file
and apply diff-apply-hunk by going to the relevant hunks that are basically
constant C-strings (comments) and use C-c C-a to undo the hunk. We manually
go through all the .c files and apply the changes as necessary, taking care
not to change any of the patched source code.
line number specified in vc-diff for discarded changes:
analyze.c: all
cmp.c: 36, 364, 377
context.c: all
diff.c: 40, 57 (3 lines there), 92
diff3.c: 35, 159, 1475
dir.c: 87, 125, 234
ifdef.c: all
io.c: all
sdiff.c: 35, 92, 747
side.c: all
util.c: 27, 121, 146, 190, 241, 270, 650


10. Use Emacs to examine the files src/*.c.rej carefully, and copy rejected patches into the corresponding .c files as needed.

Reason: The merge failed because line numbers and strings didn't match.
diff.c     diff3.c
I manually changed ` to '


11. Remove all untracked files that git status warns you about, since you don’t plan on adding any files in your patch.

I used
find . -type f -name '*.orig' -delete
and
find . -type f -name '*.rej' -delete

to delete unwanted files

12. When you’re done with the above, git status should report a half-dozen modified files, and git diff should output a patch that is three or four hundred lines long. Put that patch into a file quote-3.0-patch.txt.

$ git status
# On branch my3.0
# Changes not staged for commit:
#   (use "git add <file>..." to update what will be committed)
#   (use "git checkout -- <file>..." to discard changes in working directory)
#
#	modified:   src/cmp.c
#	modified:   src/context.c
#	modified:   src/diff.c
#	modified:   src/diff3.c
#	modified:   src/dir.c
#	modified:   src/sdiff.c
#	modified:   src/util.c
#
# Untracked files:
#   (use "git add <file>..." to include in what will be committed)
#
#	src/#diff.c#
no changes added to commit (use "git add" and/or "git commit -a")

13. Build the resulting modified version of Diffutils, using the commands described in the file README-hacking, skipping the part about CVS; CVS is obsolescent. (If you are building on lnxsrv07 or lnxsrv09 or any other host that is using version 2.16 or later of the GNU C Library, you will need to apply an additional patch after running ./bootstrap and before running ./configure, because glibc 2.16 removed the obsolete and dangerous gets function declared by a Diffutils header.) Verify that Diffutils does the right thing with the “diff . -” scenario, as well as with “diff --help”.

first run:
./bootstrap

because lnxsrv09 does not support the gets command, we apply an additional patch as specified.

./configure
make

./src/diff . -

./src/diff --help

Both give the right quote mark.


14. Do a sanity test using the modified version of Diffutils that you just built, by using the just-built diff to compare the source code of Diffutils 3.0 to the source code of your modified version. Put the former source code into a directory diffutils-3.0 and the latter source code into a directory diffutils-3.0-patch, and run your implementation of diff with the command “D/diff -pru diffutils-3.0 diffutils-3.0-patch >quote-3.0-test.txt”, where the D is the directory containing your diff implementation.

cd ..
mkdir diffutils-3.0
mkdir diffutils-3.0-patch

git clone ~eggert/src/gnu/diffutils diffutils-3.0-orig
Cloned code into folder diffutils-3.0-orig

cd diffutils-3.0-orig

git checkout 'v3.0' -b 'o3.0'
Checkout the original v3.0 code.

cp ./src/*.c ../diffutils-3.0/
Copy the original source codes to diffutils-3.0

cd ..

cp ./diffutils/src/*.c ./diffutils-3.0-patch/
Copy the patched source codes to diffutils-3.0-patch

./diffutils/src/diff -pru diffutils-3.0 diffutils-3.0-patch >quote-3.0-test.txt
I used the patched diff to compare



15. Use diff to compare the contents of quote-3.0-test.txt and quote-3.0-patch.txt. Are the files identical? If not, are the differences innocuous?

Compare two patches:
diff -u quote-3.0-test.txt diffutils/quote-3.0-patch.txt

There seem to be a lot of differences, but the don't differ in actual contents.
The differences are mainly from paths for files and hashes.

In quote-3.0-test.txt, the diff part for diff3.c is ahead of diff.c,
while in quote-3.0-patch.txt, it comes after diff.c.

When I clip them to be in the same position (I created a new file for this)
Every difference is innocuous.
